<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Admin Area</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.16/vue.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.21.0/moment.min.js"></script>
</head>

<body class="container text-center bg-dark">
  <br>
  <div id="app" class="card">
    <div class="card-body">
      <h1>Admin Area</h1>
      <br>
      <div v-if="initialLoad">
        <h4>Usage</h4>
        <br>
        <p>CPU</p>
        <div class="progress">
          <div class="progress-bar" v-bind:class="usageClass('cpu')" v-bind:style="{ width: usage.cpu }">{{ usage.cpu }}</div>
        </div>
        <br>
        <p>Memory</p>
        <div class="progress">
          <div class="progress-bar" v-bind:class="usageClass('memory')" v-bind:style="{ width: usage.memory }">{{ usage.memory }}</div>
        </div>
        <br><br>
        <div v-if="environment.onHeroku">
          <button class="btn btn-danger" v-on:click="restartDynos" v-bind:disabled="restarting">
            <span v-if="restarting">Restarting...</span>
            <span v-else>Restart Dynos</span>
            <span>&nbsp;</span>
            <i class="fa fa-refresh" v-bind:class="{ 'fa-spin': restarting, 'fa-pulse': restarting }"></i>
          </button>
        </div>
        <br><br>
        <h4>DB Dumps ({{ dbs.length }})</h4>
        <button class="btn btn-link text-primary text-center" v-on:click="dbDump()" v-bind:disabled="inFlight.dbs">
          <span v-if="inFlight.dbs">Dumping...</span>
          <span v-else>Dump DB</span>
        </button>
        <br><br>
        <div class="table-responsive">
          <table class="table table-bordered">
            <thead class="thead-light">
              <tr>
                <th>Datetime</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <tr v-for="db in dbs">
                <td>{{ db.datetime }}</td>
                <td>
                  <a class="btn btn-link text-primary" v-bind:href="'/api/admin/download/db/' + db.id"><i class="fa fa-download"></i></a>
                  <button class="btn btn-link text-danger" v-on:click="dbDump('delete', db.id)"><i class="fa fa-trash"></i></button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <br>
        <h4>Downloaded Files ({{ downloads.length }})</h4>
        <button class="btn btn-link text-danger text-center" v-on:click="remove('downloads')" v-bind:disabled="inFlight.downloads">
          <span v-if="inFlight.downloads">Deleting...</span>
          <span v-else>Delete All Files</span>
        </button>
        <br><br>
        <div class="table-responsive">
          <table class="table table-bordered">
            <thead class="thead-light">
              <tr>
                <th>Datetime</th>
                <th>Client ID</th>
                <th>Name</th>
                <th>URL</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <tr v-for="download in downloads">
                <td>{{ download.datetime }}</td>
                <td>{{ download.clientId }}</td>
                <td>{{ download.name }}</td>
                <td>{{ download.url }}</td>
                <td>
                  <a class="btn btn-link text-primary" v-if="download.exists" v-bind:href="'/api/download_file/' + download.id"><i class="fa fa-download"></i></a>
                  <button class="btn btn-link text-danger" v-on:click="remove('downloads', download.id)"><i class="fa fa-trash"></i></button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <br>
        <h4>Logs ({{ logs.length }})</h4>
        <button class="btn btn-link text-danger text-center" v-on:click="remove('logs')" v-bind:disabled="inFlight.logs">
          <span v-if="inFlight.logs">Deleting...</span>
          <span v-else>Delete All Logs</span>
        </button>
        <br><br>
        <div class="table-responsive">
          <table class="table table-bordered">
            <thead class="thead-light">
              <tr>
                <th>Datetime</th>
                <th>Level</th>
                <th>Message</th>
                <th>Data</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <tr v-for="log in logs">
                <td>{{ log.datetime }}</td>
                <td>{{ log.level }}</td>
                <td>{{ log.message }}</td>
                <td>{{ log.data }}</td>
                <td>
                  <button class="btn btn-link text-danger" v-on:click="remove('logs', log.id)"><i class="fa fa-trash"></i></button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div v-else>
        Loading...
      </div>
    </div>
  </div>
  <script>
    let app = new Vue({
      el: '#app',
      data: {
        environment: {},
        initialLoad: false,
        restarting: false,
        inFlight: {
          dbs: false,
          downloads: false,
          logs: false,
        },
        usage: {
          cpu: '0%',
          memory: '0%'
        },
        dbs: [],
        downloads: [],
        logs: []
      },
      methods: {
        restartDynos: () => {
          if (confirm('Are you sure?')) {
            app.restarting = true;
            $.ajax({
              method: 'POST',
              url: '/api/admin/actions/reboot',
              complete: () => {
                app.restarting = false;
              }
            });
          }
        },
        remove: (table, id) => {
          if (confirm('Are you sure? This cannot be undone.')) {
            app.inFlight[table] = !id;
            $.ajax({
              method: 'DELETE',
              url: '/api/admin/actions/delete',
              data: {
                table,
                id
              },
              complete: () => {
                app.inFlight[table] = false;
              }
            });
          }
        },
        dbDump: (action, id) => {
          if (action !== 'delete' || confirm('Are you sure? This cannot be undone.')) {
            method = action || 'POST';
            app.inFlight.dbs = !id;
            $.ajax({
              method,
              url: '/api/admin/actions/db_dump',
              data: {
                id
              },
              complete: () => {
                app.inFlight.dbs = false;
              }
            });
          }
        },
        usageClass: (type) => {
          let object = {};
          let usage = parseInt(app.usage[type].slice(0, -1));
          let bsClass;
          if (usage > 40 && usage < 75) {
            bsClass = 'warning';
          } else if (usage >= 75) {
            bsClass = 'danger';
          } else {
            bsClass = 'success';
          }
          object[`bg-${bsClass}`] = true;
          return object;
        }
      }
    });

    let getInfo = () => {
      $.getJSON('/api/admin/info', (data) => {
        app.environment = data.environment;
        $.each(data.usage, (key, val) => {
          app.usage[key] = `${(val * 100).toFixed(2)}%`;
        });
        app.dbs = data.dbs;
        app.downloads = data.downloads;
        app.logs = data.logs;
        app.initialLoad = true;
        setTimeout(getInfo, 1000);
      });
    };

    getInfo();
  </script>
</body>

</html>
